// For changing interest dropdown color after selection
const changeDropdownColor = self => {
   self.style.color = "#000";
};

const removeErrorNotification = () => {
   const errorMsg = document.querySelector(".form__error");
   errorMsg.innerHTML = "";
}


// Form handling
const state = {
   submittable: true
};

const submitHandler = event => {
   event.preventDefault();
   if (state.submittable) {
      const formData = new FormData(event.target);
      const error = document.querySelector(".form__error");
      const email = formData.get("email");
      const interest = formData.get("interest");
      error.innerHTML = "";

      if (!validateEmail(email)) {
         // Design currently restricts submission based off validity of email only so interest field is optional
         error.innerHTML = "Please enter a valid email address";
      } else {
         const user = {
            email, 
            interest
         };
         state.submittable = false;
         sendSubscribeRequest(user);
      }
   }
};

const successfulSubmission = () => {
   document.querySelector(".form__container").style.display = "none";
   document.querySelector(".form__success-msg").style.display = "block";
};

const unsuccessfulSubmission = () => {
   // Failed submission procedure
};

const sendSubscribeRequest = user => {
   const submitButton = document.getElementById("submit-button");
   submitButton.innerHTML = "Submitting...";
   console.log("Email: " + user.email);
   console.log("Interest: " + user.interest);
   
   // Simulated response returned as promise
   const response = new Promise((resolve, reject) => {
      setTimeout(() => {
         const request = {
            status: 'success',
            data: 'some-data'
         }
         if (request.status === 'success') {
            resolve(request.data);
         } else {
            const errormsg = "some-error"
            reject(errormsg);
         }
      }, 2000);
   });
   
   response
      .then((result) => {
         successfulSubmission()})
      .catch(err => {
         console.log(err)
         unsuccessfulSubmission()
   });
   
   
};

// Email validator (taken from https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript)
const validateEmail = email => {
   const EMAIL_REGEX = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
   return EMAIL_REGEX.test(String(email).toLowerCase());
};
